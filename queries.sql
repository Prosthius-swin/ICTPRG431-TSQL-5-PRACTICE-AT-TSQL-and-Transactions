USE ICTPRG431_TSQL_5_PRACTICE_AT_TSQL_and_Transactions;
GO

SELECT *
FROM information_schema.tables;

-- 1
-- Create a view which shows the number (count) of castings for each actor
-- (including those without any castings)
DROP VIEW IF EXISTS "9468_CASTING_SUMMARY"
GO
CREATE VIEW "9468_CASTING_SUMMARY" AS
    SELECT A.FULLNAME, A.GENDER, COUNT(C.ACTORNO) AS CASTING_COUNT
    FROM ACTOR9468 A
    LEFT JOIN CASTING9468 C 
    ON A.ACTORNO = C.ACTORNO
    GROUP BY A.FULLNAME, A.GENDER
    HAVING COUNT(C.ACTORNO) >= 0
    GO

SELECT * FROM "9468_CASTING_SUMMARY"


-- 2
-- create a view which shows the number of actors cast in each movie
DROP VIEW IF EXISTS "9468_MOVIE_CASTINGS"
GO
CREATE VIEW "9468_MOVIE_CASTINGS" AS
    SELECT M.MOVIENO, M.TITLE, M.RATINGCODE, R.SHORTDESC, COUNT(C.ACTORNO) AS ACTOR_COUNT
    FROM MOVIE9468 M
    INNER JOIN CASTING9468 C
    ON M.MOVIENO = C.MOVIENO
    INNER JOIN RATING9468 R
    ON M.RATINGCODE = R.RATINGCODE
    GROUP BY M.MOVIENO, M.TITLE, M.RATINGCODE, R.SHORTDESC
    HAVING COUNT(C.ACTORNO) >= 0
GO

SELECT * FROM "9468_MOVIE_CASTINGS"
GO

-- 3
DROP PROCEDURE IF EXISTS "9468_GET_ACTOR_BY_ID"
GO
CREATE PROCEDURE "9468_GET_ACTOR_BY_ID" @ACTNO INT AS
BEGIN
    BEGIN TRY
        DECLARE @ACTNOCHECK INT;

        SET @ACTNOCHECK = (SELECT A.ACTORNO
                           FROM ACTOR9468 A
                           WHERE ACTORNO = @ACTNO);
        
        IF @ACTNOCHECK IS NULL
            THROW 50010, 'No such actor in system', 1;
        ELSE
            SELECT A.*
            FROM ACTOR9468 A
            WHERE A.ACTORNO = @ACTNO
    END TRY
    BEGIN CATCH
        IF ERROR_NUMBER() = 50010
            THROW 50010, 'No such actor in system', 1
        ELSE 
            DECLARE @ERROR_MESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
            RAISERROR (@ERROR_MESSAGE, 16, 1);
    END CATCH
END

EXEC "9468_GET_ACTOR_BY_ID" @ACTNO = 1
GO
EXEC "9468_GET_ACTOR_BY_ID" @ACTNO = 7

-- 4
DROP PROCEDURE IF EXISTS "9468_UPDATE_ACTOR"
GO
CREATE PROCEDURE "9468_UPDATE_ACTOR" @ACTNO INT, @GNAME NVARCHAR(100), @SNAME NVARCHAR(100), @GENDER NVARCHAR(1), @BDATE DATE, @IMDBNO NVARCHAR(20), @BCOUNTRY NVARCHAR(50) AS
BEGIN
    BEGIN TRY
        DECLARE @ACTNOCHECK INT;

        SET @ACTNOCHECK = (SELECT A.ACTORNO
                           FROM ACTOR9468 A
                           WHERE ACTORNO = @ACTNO);
        
        IF @ACTNOCHECK IS NULL
            THROW 50010, 'No such actor in system', 1;
        ELSE
            UPDATE ACTOR9468 
            SET FULLNAME = CONCAT(@GNAME, ' ', @SNAME), GIVENNAME = @GNAME, SURNAME = @SNAME, GENDER = @GENDER, BIRTHDATE = @BDATE, IMDBID = @IMDBNO, BIRTHCOUNTRY = @BCOUNTRY
            WHERE ACTORNO = @ACTNO
    END TRY
    BEGIN CATCH
        IF ERROR_NUMBER() = 50010
            THROW 50010, 'No such actor in system', 1
        ELSE IF LEN(@GENDER) != 1
            THROW 50020, 'Invalid Gender value entered', 1
        ELSE IF @GNAME IS NULL OR @SNAME IS NULL
            THROW 50030, 'Null values cannot be entered for actor names', 1
        ELSE 
            DECLARE @ERROR_MESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
            RAISERROR (@ERROR_MESSAGE, 16, 1);
    END CATCH
END

EXEC "9468_UPDATE_ACTOR" @ACTNO = 7, @GNAME = NULL, @SNAME = 'Smith', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
EXEC "9468_UPDATE_ACTOR" @ACTNO = 1, @GNAME = 'John', @SNAME = 'Smith', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
EXEC "9468_UPDATE_ACTOR" @ACTNO = 7, @GNAME = 'John', @SNAME = 'Smith', @GENDER = '', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
EXEC "9468_UPDATE_ACTOR" @ACTNO = 7, @GNAME = 'John', @SNAME = 'Smith', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'

-- 5
DROP PROCEDURE IF EXISTS "9468_DELETE_ACTOR"
GO
CREATE PROCEDURE "9468_DELETE_ACTOR" @ACTNO INT AS
BEGIN
    BEGIN TRY
        DECLARE @ACTNOCHECK INT;

        SET @ACTNOCHECK = (SELECT A.ACTORNO
                           FROM ACTOR9468 A
                           WHERE ACTORNO = @ACTNO);
        
        IF @ACTNOCHECK IS NULL
            THROW 50010, 'No such actor in system', 1;
        ELSE
            DELETE FROM CASTING9468
            WHERE ACTORNO = @ACTNO

            DELETE FROM ACTOR9468
            WHERE ACTORNO = @ACTNO
    END TRY
    BEGIN CATCH
        IF ERROR_NUMBER() = 50010
            THROW 50010, 'No such actor in system', 1
        ELSE 
            DECLARE @ERROR_MESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
            RAISERROR (@ERROR_MESSAGE, 16, 1);
    END CATCH
END

EXEC "9468_DELETE_ACTOR" @ACTNO = 1
GO
EXEC "9468_DELETE_ACTOR" @ACTNO = 7

-- 6
CREATE TABLE PAST_ACTOR_LOG_9468 (
    LOGID INT IDENTITY(1,1) PRIMARY KEY,
    DATETIMEDELETED DATETIME,
    ACTORNO INT,
    GIVENNAME NVARCHAR(100),
    SURNAME NVARCHAR(100),
    GENDER NVARCHAR(1)
);

DROP TRIGGER IF EXISTS "9468_TRG_DELETE_ACTOR"
GO
CREATE TRIGGER "9468_TRG_DELETE_ACTOR" ON ACTOR9468 FOR DELETE AS
BEGIN
    BEGIN TRY
        DECLARE @ACTNO INT;
        DECLARE @GNAME NVARCHAR(100);
        DECLARE @SNAME NVARCHAR(100);
        DECLARE @GENDER NVARCHAR(1);

        SET @ACTNO = (SELECT ACTORNO FROM DELETED);
        SET @GNAME = (SELECT GIVENNAME FROM DELETED);
        SET @SNAME = (SELECT SURNAME FROM DELETED);
        SET @GENDER = (SELECT GENDER FROM DELETED);

        INSERT INTO PAST_ACTOR_LOG_9468 (DATETIMEDELETED, ACTORNO, GIVENNAME, SURNAME, GENDER)
        VALUES (GETDATE(), @ACTNO, @GNAME, @SNAME, @GENDER)
    END TRY
    BEGIN CATCH
        DECLARE @ERROR_MESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
        RAISERROR (@ERROR_MESSAGE, 16, 1);
    END CATCH
END

INSERT INTO ACTOR9468 (ACTORNO, FULLNAME, GIVENNAME, SURNAME, GENDER, BIRTHDATE, IMDBID, BIRTHCOUNTRY)
VALUES (1, 'Callum Hopins', 'Callum', 'Hopkins', 'M', '1990-01-01', 'tt1234567', 'USA')
GO

EXEC "9468_DELETE_ACTOR" @ACTNO = 1
GO

SELECT * 
FROM PAST_ACTOR_LOG_9468
WHERE ACTORNO = 1

-- 7
DROP FUNCTION IF EXISTS [9468_ADDER_FUNCTION]
GO
CREATE FUNCTION [9468_ADDER_FUNCTION](@NUM1 DECIMAL, @NUM2 DECIMAL)
RETURNS DECIMAL AS
BEGIN
    DECLARE @SUM DECIMAL = @NUM1 + @NUM2;
    RETURN @SUM;
END
GO

-- Expected result == 9
SELECT dbo.[9468_ADDER_FUNCTION](5, 4) AS [9468_ADDER_FUNCTION]
GO

-- 8
CREATE VIEW [9468_ALL_ACTORS] AS
    SELECT * FROM ACTOR9468;
GO

SELECT * FROM [9468_ALL_ACTORS]

DROP PROCEDURE IF EXISTS [9468_ADD_NEW_ACTOR]
GO
CREATE PROCEDURE [9468_ADD_NEW_ACTOR] @ACTNO INT, @GNAME VARCHAR(100), @SNAME NVARCHAR(100), @GENDER NVARCHAR(1), @BDATE DATE, @IMDBNO VARCHAR(20), @BCOUNTRY VARCHAR(50) AS
BEGIN
    SET TRANSACTION ISOLATION LEVEL READ COMMITTED
    BEGIN TRANSACTION
        BEGIN TRY
            DECLARE @ACTNOCHECK INT;
            SET @ACTNOCHECK = (SELECT A.ACTORNO
                                FROM [9468_ALL_ACTORS] A
                                WHERE ACTORNO = @ACTNO);    
            IF @ACTNOCHECK = @ACTNO
                THROW 50051, 'Actor already in the system', 1;
            ELSE
                INSERT INTO [9468_ALL_ACTORS] VALUES (@ACTNO, @GNAME + ' ' + @SNAME, @GNAME, @SNAME, @GENDER, @BDATE, @IMDBNO, @BCOUNTRY)

                COMMIT TRANSACTION
        END TRY
        BEGIN CATCH
            ROLLBACK TRANSACTION
            IF ERROR_NUMBER() = 50051
                THROW 50051, 'Actor already in the system', 1
            ELSE
                DECLARE @ERROR_MESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
                RAISERROR (@ERROR_MESSAGE, 16, 1);
        END CATCH
END

-- Test duplciate @ACTNO
EXEC [9468_ADD_NEW_ACTOR] @ACTNO = 8, @GNAME = 'Callum', @SNAME = 'Hopkins', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
SELECT * FROM [9468_ALL_ACTORS]

-- 2 Test NULL NAME
EXEC [9468_ADD_NEW_ACTOR] @ACTNO = 2, @GNAME = NULL, @SNAME = 'Hopkins', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
SELECT * FROM [9468_ALL_ACTORS]

-- 3 Test invalid @GENDER
EXEC [9468_ADD_NEW_ACTOR] @ACTNO = 3, @GNAME = 'Callum', @SNAME = 'Hopkins', @GENDER = '', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
SELECT * FROM [9468_ALL_ACTORS]

-- 4 Test valid data
EXEC [9468_ADD_NEW_ACTOR] @ACTNO = 4, @GNAME = 'Callum', @SNAME = 'Hopkins', @GENDER = 'M', @BDATE = '1990-01-01', @IMDBNO = 'tt1234567', @BCOUNTRY = 'USA'
GO
SELECT * FROM [9468_ALL_ACTORS]
